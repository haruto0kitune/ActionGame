(in-package :game)

(defun key-event (rect current-key-state)
  (with-slots (left right up down) current-key-state
    (when (eq left t)
      (-= (x rect) 10))
    (when (eq right t)
      (+= (x rect) 10))
    (when (eq up t)
      (-= (y rect) 10))
    (when (eq down t)
      (+= (y rect) 10))))

(defun collision-test2 ()
  (sdl:with-init ()
    (sdl:window 800 600)
    (sdl:set-video-driver "directx")
    (sdl:init-video)
    (setf (sdl:frame-rate) 60)
    (let ((player (make-instance 'rect :x 0 :y 0 :w 64 :h 64))
	  (blocks (make-instance 'rect :x 400 :y 300 :w 64 :h 64))
	  (current-key-state (make-instance 'key-state)))
      (sdl:with-events (:poll)
	(:quit-event () t)
	(:key-down-event (:key key)
			 (when (sdl:key= key :sdl-key-escape)
			   (sdl:push-quit-event))
			 (update-key-state key t current-key-state))
	(:key-up-event (:key key)
		       (update-key-state key nil current-key-state))
	(:idle ()
	       (sdl:clear-display sdl:*black*)
	       (key-event player current-key-state)
	       (if (eq (detect-collision-of-line-segments player blocks) t)
		   (-= (y player) 10))
	       (sdl:draw-rectangle-* (x player)
				     (y player)
				     (w player)
				     (h player))
	       (sdl:draw-rectangle-* (x blocks)
				     (y blocks)
				     (w blocks)
				     (h blocks))
	       (sdl:update-display))))))
	     
(collision-test2)
