(in-package :game)

(defun key-event (player current-key-state)
  (with-slots (left right) current-key-state
    (when (eq left t)
      (move player "left"))
    (when (eq right t)
      (move player "right"))))

(defun scroll-class-test ()
  (sdl:with-init ()
    (sdl:window 800 600)
    (setf (sdl:frame-rate) 60)
    (let ((ins (make-instance 'stage)) (player (make-instance 'player)) (current-key-state (make-instance 'key-state)))
      (print ins)
      (set-x player 440)
      (setf (action-flag *player-flag*) "running-left")
      (sdl:with-events (:poll)
	(:quit-event () t)
	(:key-down-event (:key key)
			 (when (sdl:key= key :sdl-key-escape)
			   (sdl:push-quit-event))
			 (update-key-state key t current-key-state))
	(:key-up-event (:key key)
		       (update-key-state key nil current-key-state))
	(:idle ()
	       (sdl:clear-display sdl:*black*)
	       (key-event player current-key-state)
	       (draw-sprite ins 0 0)
	       (draw-sprite (draw player) (x (image player)) (y (image player)))
	       (do-scroll (scroll ins) player ins)
	       (sdl:update-display))))))

(scroll-class-test)
